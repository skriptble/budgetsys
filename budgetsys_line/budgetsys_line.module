<?php

/**
 * @file
 * Line Item module for the Budget System.
 */

/**
 * Implements hook_entity_info().
 */
function budgetsys_line_entity_info() {
  $return = array(
    'budgetsys_line' => array(
      'label' => t('Budget System Line Item'),
      'plural label' => t('Budget System Line Items'),
      'description' => t('An entity type for line items which group budget values.'),
      'entity class' => 'BudgetsysLineClass',
      'controller class' => 'BudgetsysLineClassController',
      'base table' => 'budgetsys_line',
      'fieldable' => TRUE,
      'module' => 'budgetsys_line',
      'load hook' => 'budgetsys_line_load',
      'entity keys' => array(
        'id' => 'lid',
        'label' => 'title',
        'bundle' => 'type',
      ),
      'bundle keys' => array(
        'bundle' => 'type',
      ),
      'bundles' => array(),
      'static cache' => TRUE,
      'label callback' => 'entity_class_label',
      'uri callback' => 'entity_class_uri',
      'access callback' => 'budgetsys_line_access',
    ),
  );
/*****************************************************************  
    foreach (budgetsys_line_item_types() as $type => $info) {
    $return['budgetsys_line']['bundles'][$type] = array(
      'label' => $info->name,
      'admin' => array(
        'path' => 'admin/structure/budget/line/manage/%budgetsys_line_item_type',
        'real path' => 'admin/structure/budget/line/manage/' . $type,
        'bundle argument' => 4,
        'access arguments' => array('administer budget line items'),
      ),
    );
  }  
 ******************************************************************/
$return['budgetsys_line_type'] = array(
    'label' => t('Line Item Type'),
    'entity class' => 'LineItemType',
    'controller class' => 'LineItemTypeController',
    'base table' => 'budgetsys_line_item_type',
    'fieldable' => FALSE,
    'bundle of' => 'budgetsys_line',
    'exportable' => TRUE,
    'entity keys' => array(
      'id' => 'ltid',
      'name' => 'type',
      'label' => 'label',
    ),
    'module' => 'budgetsys_line',
    // Enable the entity API's admin UI.
    'admin ui' => array(
      'path' => 'admin/structure/budget/line',
      'file' => 'budgetsys_line.admin.inc',
      'controller class' => 'LineItemTypeUIController',
    ),
    'access callback' => 'budgetsys_line_type_access',
  );
  
  return $return;
}

/**
* Implements hook_entity_info_alter().
*/
function budgetsys_line_entity_info_alter(&$entity_info) {
  foreach (budgetsys_line_item_types() as $type => $info) {
    $entity_info['budgetsys_line']['bundles'][$type] = array(
      'label' => $info->label,
      'admin' => array(
        'path' => 'admin/structure/budget/line-types/manage/%line_item_type',
        'real path' => 'admin/structure/budget/line-types/manage/' . $type,
        'bundle argument' => 4,
      ),
    );
  }
}


/**
 * Implements hook_menu().
 */
function budgetsys_line_menu() {
  $items['budget/line/add'] = array(
    'title' => 'Add Budget Line Item',
    'page callback' => 'budgetsys_line_admin_add_page',
    'access arguments' => array('administer budget line items'),
    'file' => 'budgetsys_line.admin.inc',
    'type' => MENU_NORMAL_ITEM,

  );
  $budget_line_uri = 'budget/line/%budgetsys_line';
  $budget_line_uri_argument_position = 2;
  
  $items[$budget_line_uri] = array(
    'title callback' => 'entity_label',
    'title arguments' => array('budgetsys_line', $budget_line_uri_argument_position),
    'page callback' => 'budgetsys_line_page_view',
    'page arguments' => array($budget_line_uri_argument_position),
    'access callback' => 'entity_access',
    'access arguments' => array('view', 'budgetsys_line', $budget_line_uri_argument_position),
    'file' => 'budgetsys_line.pages.inc',
  );
  
  $items[$budget_line_uri . '/view'] = array(
    'title' => 'View',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items[$budget_line_uri . '/budget-line'] = array(
    'title' => 'Budget Line',
    'page callback' => 'budgetsys_line_budget_view',
    'page arguments' => array($budget_line_uri_argument_position),
    'access callback' => 'entity_access',
    'access arguments' => array('view', 'budgetsys_line', $budget_line_uri_argument_position),
    'file' => 'budgetsys_line.pages.inc',
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
  );  
  $items[$budget_line_uri . '/delete'] = array(
    'title' => 'Delete task',
    'title callback' => 'budgetsys_line_label',
    'title arguments' => array($budget_line_uri_argument_position),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('budgetsys_line_delete_form', $budget_line_uri_argument_position),
    'access callback' => 'entity_access',
    'access arguments' => array('edit', 'budgetsys_line', $budget_line_uri_argument_position),
    'file' => 'budgetsys_line.admin.inc',
  );
  
  $items[$budget_line_uri . '/edit'] = array(
    'title' => 'Edit',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('budgetsys_line_form', $budget_line_uri_argument_position),
    'access callback' => 'entity_access',
    'access arguments' => array('edit', 'budgetsys_line', $budget_line_uri_argument_position),
    'file' => 'budgetsys_line.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
  );
  
  foreach (budgetsys_line_item_types() as $type => $info) {
    $items['budget/line/add/' . $type] = array(
      'title' => 'Add ' . entity_label('budgetsys_line_type', $info) . ' Line',
      'page callback' => 'budgetsys_line_add',
      'page arguments' => array(3),
      'access callback' => 'entity_access',
      'access arguments' => array('create', 'budgetsys_line_type', $type),
      'file' => 'budgetsys_line.admin.inc',
    );
  }

  $items['admin/structure/budget/line/%budgetsys_line_type/delete'] = array(
    'title' => 'Delete',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('budgetsys_line_type_form_delete_confirm', 4),
    'access arguments' => array('administer budget line items'),
    'weight' => 1,
    'type' => MENU_NORMAL_ITEM,
    'file' => 'budgetsys_line.admin.inc',
  );
  
  $items['admin/config/system/budget_system_line'] = array(
    'title' => t('Budget System Line Item Configuration'),
    'description' => 'Configuration for the Budget System Line Item module',
    'page callback' => 'drupal_get_form',
    'page arguments' =>array('budgetsys_line_configuration_form'),
    'access arguments' => array('administer budget system'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'budgetsys_line.settings.inc',
  );
  return $items;
}

/**
* Implements hook_permission().
*/
function budgetsys_line_permission() {
  $permissions = array(
    'administer budget line items' => array(
      'title' => t('Administer budget line items'),
      'description' => t('Allows users to configure budget line item types and their fields.'),
      'restrict access' => TRUE,
    ),
    'create budget line items' => array(
      'title' => t('Create budget line items'),
      'description' => t('Allows users to create budget line items.'),
      'restrict access' => TRUE,
    ),
    'view budget line items' => array(
      'title' => t('View budget line items'),
      'description' => t('Allows users to view budget line items.'),
      'restrict access' => TRUE,
    ),
    'edit any budget line items' => array(
      'title' => t('Edit any budget line items'),
      'description' => t('Allows users to edit any budget line items.'),
      'restrict access' => TRUE,
    ),
    'edit own budget line items' => array(
      'title' => t('Edit own budget line items'),
      'description' => t('Allows users to edit own budget line items.'),
      'restrict access' => TRUE,
    ),
  );
  return $permissions;
}

/**
 * Implements hook_entity_property_info_alter().
 */
function budgetsys_line_entity_property_info_alter(&$info) {
  $properties = &$info['budgetsys_line']['properties'];
  $properties['created'] = array(
    'label' => t("Date created"),
    'type' => 'date',
    'description' => t("The date the budget line was posted."),
    'setter callback' => 'entity_property_verbatim_set',
    'setter permission' => 'administer budget line items',
    'schema field' => 'created',
  );
  $properties['changed'] = array(
    'label' => t("Date changed"),
    'type' => 'date',
    'schema field' => 'changed',
    'description' => t("The date the budget like was most recently updated."),
  );
  $properties['oid'] = array(
    'label' => t("Organization"),
    'type' => 'user',
    'description' => t("The organization of the budget line."),
    'setter callback' => 'entity_property_verbatim_set',
    'setter permission' => 'administer budget line items',
    'required' => TRUE,
    'schema field' => 'oid',
  );
  $properties['account_number'] = array(
    'label' => t("Account Number"),
    'type' => 'varchar',
    'description' => t("The account number of the budget line."),
    'setter callback' => 'entity_property_verbatim_set',
    'setter permission' => 'administer budget line items',
    'required' => TRUE,
    'schema field' => 'account_number',
  );
    $properties['year'] = array(
    'label' => t("Fiscal Year"),
    'type' => 'varchar',
    'description' => t("The fiscal year of the budget line."),
    'setter callback' => 'entity_property_verbatim_set',
    'setter permission' => 'administer budget line items',
    'required' => TRUE,
    'schema field' => 'year',
  );
  $properties['uid'] = array(
    'label' => t("Author"),
    'type' => 'user',
    'description' => t("The author of the budget line."),
    'setter callback' => 'entity_property_verbatim_set',
    'setter permission' => 'administer budget line items',
    'required' => TRUE,
    'schema field' => 'uid',
  );
}
/*******************************************************************************
 ****************************** Budget Line API's ******************************
 ******************************************************************************/
/**
* Access callback for Budget Line.
*/
function budgetsys_line_access($op, $budget_line, $account = NULL, $entity_type = NULL) {
  global $user;
  if (!isset($account)) {
    $account = $user;
  }
  switch ($op) {
    case 'create':
      return user_access('administer budget line items', $account)
          || user_access('create budget line items', $account);
    case 'view':
      return user_access('administer budget line items', $account)
          || user_access('view budget line items', $account);
    case 'edit':
      return user_access('administer budget line items')
          || user_access('edit any budget line items')
          || (user_access('edit own budget line items') && ($budget_line->uid == $account->uid));
  }
}

/**
 * Load a budget line item.
 */
function budgetsys_line_load($lid, $reset = FALSE) {
  $budget_line = budgetsys_line_load_multiple(array($lid), array(), $reset);
  return reset($budget_line);
}

/**
 * Load multiple line items based on certain conditions.
 */
function budgetsys_line_load_multiple($lids = array(), $conditions = array(), $reset = FALSE) {
  return entity_load('budgetsys_line', $lids, $conditions, $reset);
}

/**
 * Save budget line.
 */
function budgetsys_line_save($line_item) {
  entity_save('budgetsys_line', $line_item);
}

/**
 * Delete single budget line.
 */
function budgetsys_line_delete($line_item) {
  entity_delete('budgetsys_line', entity_id('budgetsys_line' ,$line_item));
}

/**
 * Delete multiple budget lines.
 */
function budgetsys_line_delete_multiple($line_ids) {
  entity_delete_multiple('budgetsys_line', $line_ids);
}

/*******************************************************************************
 ****************************** Budget Line Type API's *************************
 ******************************************************************************/

/**
 * Access callback for task Type.
 */
function budgetsys_line_type_access($op, $entity = NULL) {
  return user_access('administer budget line items');
}

/**
 * Load task Type.
 */
function budgetsys_line_type_load($line_item_type) {
  return example_task_types($line_item_type);
}

/**
 * List of budget like types.
 */
function budgetsys_line_item_types($line_item_name = NULL) {
  $types = entity_load_multiple_by_name('budgetsys_line_type', isset($line_item_name) ? array($line_item_name) : FALSE);
  return isset($line_item_name) ? reset($types) : $types;
}

/**
 * Save budget line type entity.
 */
function budgetsys_line_type_save($line_item_type) {
  entity_save('budgetsys_line_type', $line_item_type);
}

/**
 * Delete single budget line type.
 */
function budgetsys_line_type_delete($line_item_type) {
  entity_delete('budgetsys_line_type', entity_id('budgetsys_line_type' ,$line_item_type));
}

/**
 * Delete multiple case types.
 */
function budgetsys_line_type_delete_multiple($line_item_type_ids) {
  entity_delete_multiple('budgetsys_line_type', $line_item_type_ids);
}

/**
  * Implements hook_views_api().
  */
function budgetsys_line_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'budgetsys_line'),
  );
}

/**
 * Adds the theme specifications to the Theme Registry
 */
function budgetsys_line_theme($existing, $type, $theme, $path) {
  return array(
    'budgetsys_line' => array(
      'variables' => array('element' => null),
      'template' => 'budgetsys_line',
      'path' => drupal_get_path('module', 'budgetsys_line') . "/templates",
    ),
    'budgetsys_line_budget' => array(
      'variables' => array('element' => null),
      'template' => 'budgetsys_line_budget',
      'path' => drupal_get_path('module', 'budgetsys_line') . "/templates",
    ),
  );
}